buildscript {
    ext {
        springBootVersion = '2.6.2'
        kotlinVersion = '1.2.20'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

        // Build artifact directly into docker
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.22.2"
        classpath "io.franzbecker:gradle-lombok:1.11"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.palantir.docker'

// Do not forget to install Lombok Plugin and enable Compiler > Annotation Processors in IntelliJ IDEA
apply plugin: 'io.franzbecker.gradle-lombok'

group = 'com.example'
version = '0.1'
sourceCompatibility = 1.8

jar {
    baseName = 'db-demo'
}

docker {
    name "${project.group}/${jar.baseName}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}

repositories {
    mavenCentral()
}

dependencies {
    // Web
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')

    // DB
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    runtime('com.h2database:h2')
    // Flyway will reuse default datasource
    // See also https://flywaydb.org/documentation/migrations
    compile('org.flywaydb:flyway-core')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')

//    compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')

//    compile('org.springframework.boot:spring-boot-starter-data-rest')
//    compile('org.springframework.data:spring-data-rest-hal-browser')
//    runtime('org.postgresql:postgresql')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}
